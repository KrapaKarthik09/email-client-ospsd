[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "email-client-ospsd"
version = "0.1.0"
description = "A comprehensive email client with Gmail implementation"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Karthik Krapa", email = "karthik.krapa@nyu.edu"}
]
requires-python = ">=3.11"
dependencies = [
    "google-auth==2.23.4",
    "google-auth-oauthlib==1.1.0",
    "google-auth-httplib2==0.1.1",
    "google-api-python-client==2.108.0",
    "python-dotenv==1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest==7.4.3",
    "pytest-cov==4.1.0",
    "pytest-asyncio==0.21.1",
    "mypy==1.7.1",
    "ruff==0.1.7",
    "pre-commit==3.5.0",
    "mkdocs==1.5.3",
    "mkdocs-material==9.4.8",
    "mkdocs-autorefs==0.5.0",
    "mkdocstrings==0.24.0",
    "mkdocstrings-python==1.7.5",
    "coverage==7.3.2",
    "types-requests==2.31.0.10",
]

[project.urls]
Homepage = "https://github.com/kkrapa/email-client-ospsd"
Repository = "https://github.com/kkrapa/email-client-ospsd"
Issues = "https://github.com/kkrapa/email-client-ospsd/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "A",    # flake8-builtins
    "ARG",  # flake8-unused-arguments  
    "B",    # flake8-bugbear
    "C",    # flake8-comprehensions
    "DTZ",  # flake8-datetimez
    "E",    # Error
    "EM",   # flake8-errmsg
    "F",    # Pyflakes
    "FBT",  # flake8-boolean-trap
    "I",    # isort
    "ICN",  # flake8-import-conventions
    "N",    # pep8-naming
    "PLC",  # Pylint
    "PLE",  # Pylint
    "PLR",  # Pylint
    "PLW",  # Pylint
    "Q",    # flake8-quotes
    "RUF",  # Ruff-specific
    "S",    # flake8-bandit
    "T",    # flake8-debugger
    "TID",  # flake8-tidy-imports
    "UP",   # pyupgrade
    "W",    # Warning
    "YTT",  # flake8-2020
]
ignore = [
    "PLR0913",  # Too many arguments to function call - sometimes necessary for APIs
    "S101",     # Use of assert detected - needed for tests
    "E501",     # Line too long - handled by formatter
]

[tool.ruff.per-file-ignores]
"tests/**/*" = ["S101", "PLR2004", "ARG", "FBT"]
"**/tests/**/*" = ["S101", "PLR2004", "ARG", "FBT"]

[tool.ruff.isort]
known-first-party = ["email_client_api", "gmail_client_impl", "email_analytics"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
extra_checks = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = "googleapiclient.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "--strict-markers",
    "--strict-config", 
    "--cov=src",
    "--cov-branch",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
]
testpaths = ["tests", "src"]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 